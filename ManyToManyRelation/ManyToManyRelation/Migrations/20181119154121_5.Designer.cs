// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ManyToManyRelation.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20181119154121_5")]
    partial class _5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ManyToManyRelation.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName");

                    b.Property<int?>("StudentCourseCourseId");

                    b.Property<int?>("StudentCourseStudentId");

                    b.HasKey("Id");

                    b.HasIndex("StudentCourseStudentId", "StudentCourseCourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ManyToManyRelation.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseId");

                    b.Property<int?>("StudentCourseCourseId");

                    b.Property<int?>("StudentCourseStudentId");

                    b.Property<string>("StudentName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentCourseStudentId", "StudentCourseCourseId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("ManyToManyRelation.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("CourseId");

                    b.HasKey("StudentId", "CourseId");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("ManyToManyRelation.Models.Course", b =>
                {
                    b.HasOne("ManyToManyRelation.Models.StudentCourse")
                        .WithMany("course")
                        .HasForeignKey("StudentCourseStudentId", "StudentCourseCourseId");
                });

            modelBuilder.Entity("ManyToManyRelation.Models.Student", b =>
                {
                    b.HasOne("ManyToManyRelation.Models.Course")
                        .WithMany("Students")
                        .HasForeignKey("CourseId");

                    b.HasOne("ManyToManyRelation.Models.StudentCourse")
                        .WithMany("student")
                        .HasForeignKey("StudentCourseStudentId", "StudentCourseCourseId");
                });
#pragma warning restore 612, 618
        }
    }
}
